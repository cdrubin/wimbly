worker_processes 1;

worker_rlimit_nofile 262144;

events {
  worker_connections 16384;
  use epoll;
}

error_log logs/error.log debug;

pid logs/nginx.pid;

user wimbly wimbly;

http {
  include mime.types;

  resolver 8.8.4.4;

  lua_package_path "lualib/resty/?.lua;lualib/wimbly/?.lua;;";

  init_by_lua '
    -- part of openresty
    cjson = require "cjson"

    -- luarocks
    require "luarocks.loader"

    -- uuid generator
    uuid = require "uuid"
    uuid.randomseed( ngx.now() * 10000 )

    -- bcrypt password hasher
    bcrypt = require "bcrypt"

    -- date library
    date = require "date"

    -- for data structure inspection during development
    inspect = require "inspect"

    -- for light-weight classes
    class = require "middleclass"

    -- for a streaming XML parser
    slaxml = require "slaxml"

    -- for some utility functions
    require "util"

    -- form and field validation library
    validate = require "validate"

    -- REST API helper
    restfully = require "restfully"

  ';

  server {
    server_name domain.com;

    listen 80 default;

    #listen 443 default_server ssl;
    #ssl_certificate      ../../nginx/ssl/domain_com.pem;
    #ssl_certificate_key  ../../nginx/ssl/domain_com.key;

    # during development
    lua_code_cache off;

    # CORS handling by origin
    header_filter_by_lua '
      if ngx.var.http_origin ~= nil and ngx.var.http_origin:ends( "domain.com" ) then
        ngx.header["Access-Control-Allow-Origin"] = ngx.var.http_origin
        ngx.header["Access-Control-Allow-Credentials"] = "true"
      end
    ';

    # dynamic content
    include ../../application/urls.conf;

    # static content
    root ../static/domain.com;

    # static content (temporary generated files)
    location /static {
      autoindex off;
      alias ../static;
    }

    # enable correct Content-Type on pre-gzipped assets
    gzip_static on;

    # do not log favicon.ico requests
    location = /favicon.ico {
      log_not_found off;
    }
  }


}
